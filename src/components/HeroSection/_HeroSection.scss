@import "../../sass-utils/functions";
@import "../../sass-utils/helpers";
@import "../../sass-utils/mixins";
@import "../../sass-utils/variables";
@include google-font(
  "Public+Sans:100,200,300,regular,500,600,700,800,900,100italic,200italic,300italic,italic,500italic,600italic,700italic,800italic,900italic"
);
.Profile {
  position: relative;
  font-family: "Public Sans";
  overflow: hidden;
  height: 18rem;
  width: 100%;
  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;

  margin: auto;
  border-radius: 20px;
  .ImgCover {
    height: 15rem;
    border-radius: 20px 20px 0;
    color: rgb(255, 255, 255);
    background: linear-gradient(rgba(0, 75, 80, 0.8), rgba(0, 75, 80, 0.8))
        center center / cover no-repeat,
      url(https://api-prod-minimal-v510.vercel.app/assets/images/cover/cover_4.jpg);
    background-repeat: no-repeat;
    background-position: center center;
  }
  .underCover {
    margin-bottom: 3rem;
    @include flex();
    border-radius: 30px;
    justify-content: space-between;
    .rightContaine {
      border-radius: 10px;
      height: 3rem;
      @include flex();
      img {
        border-radius: 50% 50% 50% 50%;
        position: relative;
        bottom: 3rem;
        height: 148px;
        width: 144px;
        left: 10px;
        padding: 8px;
        object-fit: cover;
      }
      .aboutme {
        position: relative;
        bottom: 3rem;
        left: 1rem;
        @include flex(column, flex-start);

        background-color: transparent;
        font-weight: 400;

        h3 {
          color: $Grey100;
          background-color: transparent;
        }
        span {
          color: $Grey100;
          opacity: 0.8;

          background-color: transparent;
        }
      }
    }
    .Lines {
      display: flex;
      align-items: center;
      justify-content: space-around;
      width: 100%;
      overflow: scroll;
      a {
        text-decoration: none;

        &:active,
        &.active:link,
        &.active:visited {
          border-bottom: 2px solid black;
          img {
            opacity: 1;
          }
          span {
            color: black;
          }
        }
      }
      @include flex(row, center, 20px);
      @media (max-width: 600px) {
        max-width: 90%;
        overflow-x: scroll;
        margin-left: 1rem;
        margin-right: 1rem;

        padding: 0 12px;

        &::-webkit-scrollbar {
          display: none;
        }
      }
    }
    .lien {
      cursor: pointer;
      // border: 1px solid black;

      padding: 11px;
      @include flex();
      img {
        width: 23px;
        opacity: 0.4;
      }
      span {
        color: $Grey600;

        background-color: transparent;
      }
    }
  }
  .last {
    margin-right: 10px;
  }
}
@media (max-width: 990px) {
  .profile {
    background-color: transparent;
    position: absolute;
    right: 40%;
    top: 40%;
    display: flex;
    flex-direction: column;

    img {
      border-radius: 50% !important;
      background-color: transparent !important;
    }
    .aboutme {
      background-color: transparent !important;
    }
  }
}
.avatar_picture {
  width: 140px;
}
.updateProfile {
  position: absolute;
  right: 0;
  margin: 1rem;
  bottom: 3rem;
  padding: 1rem;
  border-radius: 50%;
  cursor: pointer;
}
.model {
  position: absolute;
  z-index: 2;
  background-color: white;
  width: 40rem;
  height: 30rem;
  margin: 20rem;
  text-align: flex-start;
  padding: 2rem;
  border-radius: 12px;
  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
  border: 1px solid;
  .hero {
    display: flex;
    align-items: flex-end;
    background-color: transparent !important;
    svg {
      background-color: transparent;
    }
    .reloding {
      cursor: pointer;
      background-color: transparent;

      width: 100%;
      height: 60px;
      opacity: 1;
      margin-left: 90%;
    }
  }
  .mainContainer {
    margin-top: 2rem;
    display: flex;
    flex-direction: column;
    gap: 2rem;
    align-items: flex-start;
    background-color: transparent;
    > div {
      background-color: transparent;
      display: flex;
      align-items: center;
      gap: 2rem;
      label {
        font-size: 19px;
        background-color: transparent;
        letter-spacing: 1px;
      }
      input {
        padding: 8px;
        border-radius: 12px;
        border: 1px solid $Grey400;
        outline: 0;
        background-color: transparent;
        font-size: 14px;
      }
    }
  }
  .underHero {
    background-color: transparent;
    svg {
      background-color: transparent;
    }

    .dataAnimation {
      width: 16rem;
      background-color: transparent;
      position: absolute;
      right: 0;
      margin-left: 2rem;
    }
  }
  .buttons {
    margin-left: 4rem;
    button {
      cursor: pointer;
      padding: 15px;
      border-radius: 12px;
      background-color: transparent;
      width: 10rem;

      border: 1px solid $Grey400;
    }
    .update {
      &:hover {
        background-color: $SuccesDark;
        color: white;
        transition: all 0.8s;
      }
    }
    .close {
      &:hover {
        background-color: $ErrorDark;
        color: white;
        transition: all 0.8s;
      }
    }
  }
  @media (max-width: 1031px) {
    left: -10%;
  }
  @media (max-width: 874px) {
    left: -30%;
  }
  @media (max-width: 738px) {
    left: -40%;
    .dataAnimation {
      display: none;
    }
    width: 30rem;
  }
  @media (max-width: 571px) {
    left: -50%;
  }
  @media (max-width: 541px) {
    scale: 0.9;
    left: -55%;
  }
  @media (max-width: 494px) {
    scale: 0.7;
    width: 28rem;
    left: -59%;
    top: 2rem;
  }
  @media (max-width: 395px) {
    left: -90%;
  }
}
.displaynone {
  display: none !important;
}
.uplodContainer {
  padding: 10px;
  border: 0.5px solid $Grey300;
  border-radius: 12px;
  cursor: pointer;
  &:hover {
    opacity: 0.5;
    transition: all 0.5s ease-in-out;
  }

  .textContenteForUplod {
    font-weight: 400;
    background-color: transparent;
  }
}
.addFriend {
  border-radius: 12px;
  display: flex;
  align-items: center;
  gap: 10px;
  .addIcon {
    scale: 1.5;
  }
}
.errer {
  border: 2px dotted $ErrorDark !important;
  color: $ErrorMain;
  text-decoration: underline dotted red 1px;
}
